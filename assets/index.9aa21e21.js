(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function a(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=a(e);fetch(e.href,o)}})();const k="https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/1/station/72420/period/latest-hour/data.json";async function b(){return fetch(k).then(t=>t.json()).then(t=>t).catch(t=>(console.error(t),null))}const $="https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/4/station/72420/period/latest-hour/data.json";async function P(){return fetch($).then(t=>t.json()).then(t=>t).catch(t=>(console.error(t),null))}const j="https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/1.json";async function A(){return fetch(j).then(t=>t.json()).then(t=>t).catch(t=>(console.error(t),null))}async function g(t,n,a){const s=`https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/${a}/station/${t}/period/${n}/data.json`;return fetch(s).then(e=>e.json()).then(e=>e).catch(e=>(console.error(e),null))}const d=document.querySelector("#searchField"),l=document.querySelector("#searchDropdown"),h=document.querySelector("#dropdownStations"),M=document.querySelector("#suggestedStations"),u=document.querySelector("main"),p=document.querySelector("#temperatureNowContainer"),L=document.querySelector("#rainAmount"),y=document.querySelector("#windSpeed"),w=document.querySelector("#temperatureNow"),T=document.querySelector("#locality"),C=document.querySelector("#positionDoNotExist"),H=document.querySelector("#myPosition");let r=[],m=[...r];async function x(){const t=await b(),n=await P();w.innerHTML=`<span>${t.value[0].value}</span>`,T.innerHTML=`<span>${t.station.name}</span>`,y.innerHTML=`<span>${n?.value[0].value}</span>`,L.innerHTML="<span> - </span>"}await x();function I(){d.value===""?(l.classList.remove("display-none"),h.classList.add("display-none")):(l.classList.add("display-none"),h.classList.remove("display-none"))}function q(t){t.stopPropagation(),l.classList.remove("display-none")}function O(){l.classList.add("display-none"),h.classList.add("display-none")}d?.addEventListener("input",I);d?.addEventListener("click",q);d?.addEventListener("focus",q);window.addEventListener("click",O);async function S(t,n){let a=r;n&&(a=m);const s=a[t].key,e=a[t].name,o=await g(s,"latest-hour",1),i=await g(s,"latest-hour",4),f=await g(s,"latest-hour",7);w.innerHTML="<span> - </span>",y.innerHTML="<span> - </span>",L.innerHTML="<span> - </span>",T.innerHTML=`<span>${e}</span>`,w.innerHTML=`<span>${o?.value[0].value}</span>`,y.innerHTML=`<span>${i?.value[0].value}</span>`,L.innerHTML=`<span>${f?.value[0].value}</span>`}async function W(t){const n=t?.target?.id;await S(n,!0)}async function F(t){if(t.key==="Enter"){const n=t?.target?.id;await S(n,!0)}}async function G(){r=(await A()).station;async function n(s){let e=-1,o=NaN;for(let i=0;i<r.length;i++){const f=r[i].latitude,D=r[i].longitude,E=f-s.coords.latitude,N=D-s.coords.longitude,v=Math.sqrt(E**2+N**2);(v<e||e===-1)&&(e=v,o=i)}await S(o,!1)}function a(){navigator.geolocation?(navigator.geolocation.getCurrentPosition(n),l.classList.add("display-none")):C.innerHTML="Ingen position hittad"}H?.addEventListener("click",a),H?.addEventListener("keypress",a)}await G();function K(){r&&(M.innerHTML="",m=r.filter(t=>t.name.toLowerCase().includes(d.value.toLowerCase())));for(let t=0;t<5;t++)if(m[t]){const n=document.createElement("li");n.setAttribute("tabindex","3"),n.id=String([t]);const a=document.createTextNode(m[t].name);n.appendChild(a),M.appendChild(n),n?.addEventListener("click",W),n?.addEventListener("keypress",F)}}console.log(r);d?.addEventListener("input",K);const c=new Date;c.getMonth()===11||c.getMonth()<=1?(u.classList.add("winter-img"),p.classList.add("winter-decoration-img")):c.getMonth()===2||c.getMonth()<=4?(u.classList.add("spring-img"),p.classList.add("spring-decoration-img")):c.getMonth()===5||c.getMonth()<=7?(u.classList.add("summer-img"),p.classList.add("summer-decoration-img")):(u.classList.add("fall-img"),p.classList.add("fall-decoration-img"));
